version: '3.8'

services:
  db:
    image: postgres:16
    networks:
      experimentation_net:
        aliases:
          - experimentation.db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=experiments
    volumes:
      - postgres_data:/var/lib/postgresql/data

  cache:
    image: valkey/valkey:alpine3.21
    ports:
      - "6379:6379"

  visualisation:
    image: apache/superset
    networks:
      experimentation_net:
        aliases:
          - experimentation.visualisation
    ports:
      - "8088:8088"
    environment:
      - SUPERSET_SECRET_KEY=supersecret
    depends_on:
      - db

  warehouse:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      experimentation_net:
        aliases:
          - experimentation.warehouse
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - warehouse_data:/data

  warehouse_client:
    depends_on:
      - warehouse
    image: minio/mc
    container_name: mc
    networks:
      experimentation_net:
        aliases:
          - experimentation.warehouse_client
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://warehouse:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/experiments;
      /usr/bin/mc mb minio/experiments;
      /usr/bin/mc policy set public minio/experiments;
      tail -f /dev/null
      "
  
  iceberg_spark:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    build: apps/analysis
    networks:
      experimentation_net:
        aliases:
          - experimentation.iceberg_spark
    depends_on:
      - iceberg_rest
      - warehouse
    volumes:
      - ./apps/analysis/warehouse:/home/iceberg/warehouse
      - ./apps/analysis/notebooks:/home/iceberg/notebooks/notebooks
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 8888:8888
      - 8080:8080
      - 10000:10000
      - 10001:10001

  iceberg_rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    networks:
      experimentation_net:
        aliases:
          - experimentation.iceberg_rest
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://experiments/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://warehouse:9000

volumes:
  postgres_data:
  warehouse_data:

networks:
  experimentation_net: