version: '3.8'

services:
  db:
    image: postgres:16
    networks:
      experimentation_net:
        aliases:
          - experimentation.db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=experiments
      - POSTGRES_MULTIPLE_DATABASES=hive
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  cache:
    image: valkey/valkey:alpine
    ports:
      - "6379:6379"
    networks:
      experimentation_net:
        aliases:
          - experimentation.cache
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  warehouse:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      experimentation_net:
        aliases:
          - experimentation.warehouse
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - warehouse_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  warehouse-init:
    image: minio/mc
    depends_on:
      warehouse:
        condition: service_healthy
    networks:
      - experimentation_net
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      mc config host add minio http://warehouse:9000 admin password;
      mc mb --ignore-existing minio/warehouse;
      mc mb --ignore-existing minio/warehouse/iceberg;
      mc anonymous set public minio/warehouse;
      exit 0;
      "

  hive-metastore:
    image: apache/hive:4.0.0-alpha-2
    networks:
      experimentation_net:
        aliases:
          - experimentation.hive
    environment:
      - SERVICE_NAME=metastore
      - HIVE_DB_DRIVER=org.postgresql.Driver
      - HIVE_DB_URL=jdbc:postgresql://experimentation.db:5432/hive
      - HIVE_DB_USER=postgres
      - HIVE_DB_PASS=postgres
      - HIVE_METASTORE_DRIVER=org.postgresql.Driver
      - HIVE_METASTORE_JDBC_URL=jdbc:postgresql://experimentation.db:5432/hive
      - HIVE_METASTORE_USER=postgres
      - HIVE_METASTORE_PASSWORD=postgres
      - CORE_CONF_fs_defaultFS=file:///tmp
      - HIVE_SITE_CONF_hive_metastore_uris=thrift://experimentation.hive:9083
      - HIVE_SITE_CONF_hive_metastore_schema_verification=false
      - HIVE_SITE_CONF_hive_metastore_connection_driver=org.postgresql.Driver
      - HIVE_SITE_CONF_hive_metastore_connection_url=jdbc:postgresql://experimentation.db:5432/hive
      - HIVE_SITE_CONF_hive_metastore_connection_username=postgres
      - HIVE_SITE_CONF_hive_metastore_connection_password=postgres
      - HIVE_SITE_CONF_datanucleus_autoCreateSchema=true
      - HIVE_SITE_CONF_datanucleus_fixedDatastore=false
      - HIVE_SITE_CONF_datanucleus_schema_autoCreateTables=true
    volumes:
      - ./docker/hive/conf:/opt/hive/conf
    ports:
      - "9083:9083"
    depends_on:
      db:
        condition: service_healthy

  spark-master:
    image: bitnami/spark:latest
    networks:
      experimentation_net:
        aliases:
          - experimentation.spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./apps/analysis/spark/conf:/opt/bitnami/spark/conf
      - ./apps/analysis/spark/jars:/opt/bitnami/spark/extra-jars

  spark-worker:
    image: bitnami/spark:latest
    networks:
      - experimentation_net
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://experimentation.spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    volumes:
      - ./apps/analysis/spark/conf:/opt/bitnami/spark/conf
      - ./apps/analysis/spark/jars:/opt/bitnami/spark/extra-jars
    depends_on:
      - spark-master

  rest-iceberg:
    image: tabulario/iceberg-rest:latest
    networks:
      experimentation_net:
        aliases:
          - experimentation.iceberg
    ports:
      - "8181:8181"
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/iceberg/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://warehouse:9000
      - CATALOG_S3_PATH_STYLE_ACCESS=true
    depends_on:
      - warehouse
      - hive-metastore

volumes:
  postgres_data:
  warehouse_data:

networks:
  experimentation_net:
    driver: bridge